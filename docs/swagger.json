{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "零重力APP",
        "title": "ZeroGravity",
        "termsOfService": "http://swagger.io/terrms",
        "contact": {
            "name": "gongna",
            "email": "2036479155@qq.com"
        },
        "version": "1.0.0"
    },
    "host": "124.71.184.107",
    "paths": {
        "/api/v1/auth/api/v1/login": {
            "post": {
                "description": "User login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "The user enters the account and password and then logs in",
                "parameters": [
                    {
                        "description": "The user enters the account and password and then logs in ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/api/v1/register": {
            "post": {
                "description": "User register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User enters account and password to register",
                "parameters": [
                    {
                        "description": "The user enters the account and password and then register in ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/collection": {
            "get": {
                "description": "Get a user's favorite record table and return it to the front end",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Get a user's favorite record table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/collection.IdeaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new favorite record to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Add favorite record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userid",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add a new favorite record to the database ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/collection.CreateCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete favorite records from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collection"
                ],
                "summary": "Delete favorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userid",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Delete favorite records from the database  ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/collection.DeleteCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/idea": {
            "post": {
                "description": "Add a thought record to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Add ideas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userid",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add a thought record to the database",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/idea.CreateIdeaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/idea/comment/:id/like": {
            "put": {
                "description": "Add a comment and like record to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Add comment and like record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LikersId",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "CommentId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/idea/detail/:id": {
            "get": {
                "description": "Return to the idea form obtained by the front end",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Get ideas",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/model.IdeaListItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            },
            "delete": {
                "description": "Add a thought record to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Add ideas",
                "parameters": [
                    {
                        "description": "Add a thought record to the database",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/idea.CreateIdeaRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "userid",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/idea/detail/:id/comment": {
            "get": {
                "description": "Return to the comment form obtained by the front end",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Get comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/idea.CommentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/idea/detail/:id/comment/:comment_id": {
            "delete": {
                "description": "Delete the comment record from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Delete comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/idea/detail/:id/comment/:idea_id": {
            "post": {
                "description": "Add comment records to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Add comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userid",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add comment records to the database",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/idea.CreateCommentRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "IdeaId",
                        "name": "idea_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/idea/detail/:id/like": {
            "put": {
                "description": "Add an idea and like record to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Add thoughts like record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LikersId ",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/idea/liked": {
            "get": {
                "description": "Return to the list of ideas that the front-end user likes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Get a list of ideas liked by users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserId",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/idea.IdeaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/idea/list": {
            "get": {
                "description": "Return a list of ideas to front-end users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "idea"
                ],
                "summary": "Get a list of ideas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "privicy",
                        "name": "privicy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "index",
                        "name": "index",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/idea.IdeaResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/message/comment": {
            "get": {
                "description": "Information returned to front-end user reviews",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Get user comment information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Information returned to front-end user information",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/message.GetMessageForCommentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/message/like": {
            "get": {
                "description": "Like information returned to front-end users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Get users' likes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Like information returned to front-end users",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/message.GetMessageForLikeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/message/readall": {
            "put": {
                "description": "Change the status of the messages that the user has viewed to read",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Modify the information as read",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Change the status of the messages that the user has viewed to read",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/message/tip": {
            "get": {
                "description": "Return to the front-end message prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "Get message reminder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Return to the front-end message prompt",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/message.GetMessageTipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/report": {
            "post": {
                "description": "Initiate a request to report a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "New report request",
                "parameters": [
                    {
                        "description": "Initiate a request to report a user",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/report.CreateReportRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/search": {
            "get": {
                "description": "Get search results, the result is a list of users or a list of ideas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get search results",
                "parameters": [
                    {
                        "type": "integer",
                        "description": " search by page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " search by limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " search by target",
                        "name": "target",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "idea key word",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Get token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/search.UserListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Delete History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": " delete history",
                        "name": "h",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.History"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/search/histories": {
            "get": {
                "description": "Delete the history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get Histories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.History"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "put": {
                "description": "Update user information in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UserId",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update user information in the database",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    }
                }
            }
        },
        "/api/v1/user/detail/:id": {
            "get": {
                "description": "All information returned to a user on the front end",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get information about a certain user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"message\":\"OK\",\"data\":{\"username\":\"kong\"}}",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserInfoResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.CreateUserRequest": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "account_password": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "account_password": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "collection.CreateCollectionRequest": {
            "type": "object",
            "properties": {
                "idea_id": {
                    "type": "integer"
                }
            }
        },
        "collection.DeleteCollectionRequest": {
            "type": "object",
            "properties": {
                "idea_id": {
                    "type": "integer"
                }
            }
        },
        "collection.IdeaResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.IdeaListItem"
                    }
                }
            }
        },
        "errno.Errno": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "idea.CommentResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CommentListItem"
                    }
                }
            }
        },
        "idea.CreateCommentRequest": {
            "type": "object",
            "properties": {
                "commented_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "idea.CreateIdeaRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "idea.IdeaResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.IdeaListItem"
                    }
                }
            }
        },
        "message.GetMessageForCommentResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MessageForCommentItem"
                    }
                }
            }
        },
        "message.GetMessageForLikeResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MessageForLikeItem"
                    }
                }
            }
        },
        "message.GetMessageTipResponse": {
            "type": "object",
            "properties": {
                "is_message": {
                    "type": "boolean"
                }
            }
        },
        "model.CommentListItem": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "commenter_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "idea_id": {
                    "type": "integer"
                },
                "liked": {
                    "description": "是否点赞",
                    "type": "boolean"
                },
                "likes_sum": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                }
            }
        },
        "model.History": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.IdeaListItem": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "comment_sum": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "idea_id": {
                    "type": "integer"
                },
                "liked": {
                    "description": "是否点赞",
                    "type": "boolean"
                },
                "likes_sum": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "publisher_id": {
                    "type": "integer"
                },
                "release_date": {
                    "type": "string"
                }
            }
        },
        "model.MessageForCommentItem": {
            "type": "object",
            "required": [
                "avatar",
                "content",
                "idea_id",
                "nickname",
                "reply",
                "user_id"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "idea_id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "reply": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.MessageForLikeItem": {
            "type": "object",
            "required": [
                "avatar",
                "comment_id",
                "content",
                "idea_id",
                "nickname",
                "user_id"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "comment_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "idea_id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "report.CreateReportRequest": {
            "type": "object",
            "properties": {
                "comment_id": {
                    "type": "integer"
                },
                "idea_id": {
                    "type": "integer"
                },
                "json": {
                    "type": "string"
                },
                "kind": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "search.IdeaResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.IdeaListItem"
                    }
                }
            }
        },
        "search.UserInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "energy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "search.UserListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.UserInfo"
                    }
                }
            }
        },
        "user.GetUserInfoResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "energy": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserInfoRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        }
    }
}